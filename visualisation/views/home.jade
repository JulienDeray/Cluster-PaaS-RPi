html
  head
    title=title
    link(href='//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css', rel='stylesheet')
  body
    div.container
      div.jumbotron
        h1 Cluster informations

      h2#alone.hidden.alert #{ip} is the only node connected at this moment !

      table.table.table-striped
        thead
            tr
                th IP
                th Port
                th Name
                th State
        tbody#nodes

    script(src='/socket.io/socket.io.js')
    script(src='http://code.jquery.com/jquery-2.1.4.min.js')
    script(type='text/javascript').
        var socket = io.connect("#{ip}:8080");

        function updatePeerInfos(peerInfos) {
            console.log('new peer informations received', JSON.stringify(peerInfos));

            var peer_tr = $('#' + peerInfos.name);
            if ( peer_tr.length > 0 ) {
                peer_tr.find('.ip').first().html(peerInfos.ip);
                peer_tr.find('.port').first().html(peerInfos.port);
                peer_tr.find('.name').first().html(peerInfos.name);
                peer_tr.find('.state').first().html(stateLabel(peerInfos.state));
                peer_tr.find('.state').first().html(peerInfos.state);
            }
            else {
                $('#nodes').append(
                        '<tr id="' + peerInfos.name + '">' +
                        '<td class="ip">' + peerInfos.ip + '</td>' +
                        '<td class="port">' + peerInfos.port + '</td>' +
                        '<td class="name">' + peerInfos.name + '</td>' +
                        '<td class="state">' + stateLabel(peerInfos.state) + '</td>' +
                        '</tr>'
                );
            }
        }

        function stateLabel( state ) {
            if (state) {
                return '<span class="label label-success">&nbsp;</span>';
            }
            else {
                return '<span class="label label-danger">&nbsp;</span>';
            }
        }

        function changePeerState(peerName, state) {
            var peer_tr = $('#' + peerName);
            peer_tr.find('.state').first().html(stateLabel(state));
        }

        socket.on('new_peer', function(peerInfos) {
            updatePeerInfos(peerInfos);
        });

        socket.on('update', function(peerInfos) {
            updatePeerInfos(peerInfos);
        });

        socket.on('peer_failed', function(peerName) {
            console.log('peer', peerName, 'failed !');
            changePeerState(peerName, false);
        });

        socket.on('peer_alive', function (peerName) {
            console.log('peer', peerName, 'alive !');
            changePeerState(peerName, true);
        });

        socket.on('alone', function(isAlone) {
            if (isAlone) {
                $('#alone').removeClass('hidden').addClass('show');
            }
            else {
                $('#alone').removeClass('show').addClass('hidden');
            }
        });